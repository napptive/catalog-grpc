syntax = "proto3";

package catalog;
option go_package = "github.com/napptive/grpc-catalog-go;grpc_catalog_go";

import "catalog/entities.proto";
import "catalog-common/entities.proto";
import "google/api/annotations.proto";

// Note: In this case, the prefix for HTTP is /catalog/ to facilitate routing paths.

// Catalog related operations
service Catalog {
  // Add a new application to the catalog.
  rpc Add (stream AddApplicationRequest) returns (catalog_common.OpResponse){
    option (google.api.http) = {
      post: "/v0/catalog/add"
      body: "*"
    };
  }
  // Download an application from the catalog.
  rpc Download(DownloadApplicationRequest) returns (stream FileInfo) {
    option (google.api.http) = {
      post: "/v0/catalog/download",
      body: "*"
    };
  }
  //Remove an application from the catalog.
  rpc Remove (RemoveApplicationRequest) returns (catalog_common.OpResponse){
    option (google.api.http) = {
      post: "/v0/catalog/remove"
      body: "*"
    };
  }
  // List the applications in the catalog.
  rpc List (ListApplicationsRequest) returns (ApplicationList) {
    option (google.api.http) = {
      post: "/v0/catalog/list"
      body: "*"
    };
  }
  // Info returns the detail of a given application.
  rpc Info (InfoApplicationRequest) returns (InfoApplicationResponse){
    option (google.api.http) = {
      post: "/v0/catalog/info"
      body: "*"
    };
  }
  // Summary returns the catalog summary
  rpc Summary(catalog_common.EmptyRequest) returns (SummaryResponse){
    option (google.api.http) = {
      get: "/v0/catalog/summary"
    };
  }
  // Update changes the application visibility (Private <-> Public)
  rpc Update(UpdateRequest) returns (catalog_common.OpResponse){
    option (google.api.http) = {
      post: "/v0/catalog/update"
      body: "*"
    };
  }

}

// NamespaceAdministration service for operations related to the namespaces. This services is
// intended for the admin facing interface of the catalog-manager.
service NamespaceAdministration{
  // Delete a namespace so that the applications contained on it are not longer available.
  rpc Delete(DeleteNamespaceRequest) returns (catalog_common.OpResponse){}
  // DeleteApplication deletes an application
  rpc DeleteApplication (RemoveApplicationRequest) returns (catalog_common.OpResponse){}
  // List all the applications in the catalog
  rpc List (ListApplicationsRequest) returns (ApplicationList) {}
}

// Application service for operations related to the applications.
service Applications{
  // Deploy an application on a target Playground platform. This endpoint
  // will gather the application information and send it to the target
  // playground platform.
  rpc Deploy(DeployApplicationRequest) returns (catalog_common.OpResponse){
    option (google.api.http) = {
      post: "/v0/catalog/app/deploy"
      body: "*"
    };
  }
  rpc GetConfiguration(GetConfigurationRequest) returns (GetConfigurationResponse) {
    option (google.api.http) = {
      post: "/v0/catalog/app/configuration"
      body: "*"
    };
  }
}